import numpy as np
import matplotlib.pyplot as plt
from skimage import exposure
import cv2


def calculate_exposure_time(image,contrast, clip_hist_per=1):
    gray_scale = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
  
    histogram = cv2.calcHist([gray_scale],[0],None,[256],[0,256])
    histogram_len = len(histogram)
  
    accumulator = []
    accumulator.append(float(histogram[0]))
    for index in range(1, histogram_len):
        accumulator.append(accumulator[index -1] + float(histogram[index]))
    
   
    maximum = accumulator[-1]
    clip_hist_per *= (maximum/100.0)
    clip_hist_per /= 2.0
    
    # Locate left cut
    mini_gray = 0
    while accumulator[mini_gray] < clip_hist_per:
        mini_gray += 1
    
    # Locate right cut
    max_gray = histogram_len -1
    while accumulator[max_gray] >= (maximum - clip_hist_per):
        max_gray -= 1
    
    # Calculate alpha and beta values
    
    exposure_time = -mini_gray * contrast
    
   

    auto_result = cv2.convertScaleAbs(image, alpha=contrast, beta=beta)
    return (auto_result, exposure_time)


## I choose to work with an image than directly with a histogram, for a better illustration of the exposure impact.
image = cv2.imread('8951_500_f00082.png')
contrast =1
auto_result, exposure_time = calculate_exposure_time(image, contrast)

print('New exposure time', exposure_time)



